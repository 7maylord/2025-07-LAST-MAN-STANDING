â‡¾ Compiling targets with crytic-compile
â‡¾ Running command:
/home/alfredadenigba/.local/bin/crytic-compile test/GameInvariantTest.sol --export-format solc
â‡¾ Finished compiling targets in 11s
â‡¾ No Slither cached results found at slither_results.json
â‡¾ Running Slither:
/home/alfredadenigba/.local/bin/slither test/GameInvariantTest.sol --ignore-compile --print echidna --json -
warn Failed to run slither
â€£ exit status 1
â‡¾ Running with a timeout of 30 seconds
â‡¾ Initializing corpus
â‡¾ Setting up test chain
â‡¾ Finished setting up test chain
â‡¾ Running call sequences in the corpus
â‡¾ Finished running call sequences in the corpus in 0s
â‡¾ corpus: health: 34%, sequences: 87 (30 valid, 57 invalid)
â‡¾ Fuzzing with 4 workers
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.excludeSenders()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.game_updatePlatformFeePercentage(uint256)
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.game_withdrawWinnings()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.targetArtifacts()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.GRACE_PERIOD()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.excludeContracts()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.failed()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_noEtherLeakage()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.game_player_claim_count_consistent()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.game_updateGracePeriod(uint256)
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_gameLogicConsistency()
â‡¾ fuzz: elapsed: 0s, calls: 0 (0/sec), seq/s: 0, branches hit: 765, corpus: 30, failures: 0/0, gas/s: 0
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.targetSelectors()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.excludeArtifacts()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.gameClaimThrone(uint256)
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.game_declareWinner()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.ghost_totalClaim()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_gracePeriodPositive()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_potNeverNegative()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.FEE_INCREASE_PERCENTAGE()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.INITIAL_CLAIM_FEE()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.PLATFORM_FEE_PERCENTAGE()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.excludeSelectors()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.game()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.game_platformFeeBalance_consistent()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_gameRoundPositive()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_platformFeesNeverNegative()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_contractBalanceConsistency()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.game_resetGame()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.ghost_platformFeesBalance()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.ghost_players(uint256)
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_claimFeeNeverBelowInitial()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_percentagesValid()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_withdrawPatternSafety()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.roundAccumulator()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.IS_TEST()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.game_updateClaimFeeParameters(uint256,uint256)
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.targetArtifactSelectors()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.targetInterfaces()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.game_withdrawPlatformFees()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_claimFeeIncreasesWithClaims()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_gameStateConsistency()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_totalClaimsConsistent()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.targetContracts()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.targetSenders()
â‡¾ fuzz: elapsed: 3s, calls: 27667 (9206/sec), seq/s: 190, branches hit: 936, corpus: 42, failures: 0/571, gas/s: 293905350
â‡¾ Transaction test limit reached, halting now...
â‡¾ Fuzzer stopped, test results follow below ...
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.FEE_INCREASE_PERCENTAGE()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.GRACE_PERIOD()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.INITIAL_CLAIM_FEE()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.IS_TEST()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.PLATFORM_FEE_PERCENTAGE()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.excludeArtifacts()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.excludeContracts()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.excludeSelectors()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.excludeSenders()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.failed()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.game()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.game_declareWinner()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.game_platformFeeBalance_consistent()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.game_player_claim_count_consistent()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.game_resetGame()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.game_updateClaimFeeParameters(uint256,uint256)[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.game_updateGracePeriod(uint256)[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.game_updatePlatformFeePercentage(uint256)[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.game_withdrawPlatformFees()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.game_withdrawWinnings()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.gameClaimThrone(uint256)[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.ghost_platformFeesBalance()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.ghost_players(uint256)[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.ghost_totalClaim()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_claimFeeIncreasesWithClaims()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_claimFeeNeverBelowInitial()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_contractBalanceConsistency()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_gameLogicConsistency()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_gameRoundPositive()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_gameStateConsistency()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_gracePeriodPositive()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_noEtherLeakage()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_percentagesValid()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_platformFeesNeverNegative()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_potNeverNegative()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_totalClaimsConsistent()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_withdrawPatternSafety()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.roundAccumulator()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.targetArtifactSelectors()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.targetArtifacts()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.targetContracts()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.targetInterfaces()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.targetSelectors()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.targetSenders()[0m
â‡¾ Test summary: 44 test(s) passed, 0 test(s) failed
â‡¾ html report(s) saved to: medusa-corpus/coverage/coverage_report.html
â‡¾ lcov report(s) saved to: medusa-corpus/coverage/lcov.info
