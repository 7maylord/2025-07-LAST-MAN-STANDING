â‡¾ Compiling targets with crytic-compile
â‡¾ Running command:
/home/alfredadenigba/.local/bin/crytic-compile test/GameInvariantTest.sol --export-format solc
â‡¾ Finished compiling targets in 6s
â‡¾ No Slither cached results found at slither_results.json
â‡¾ Running Slither:
/home/alfredadenigba/.local/bin/slither test/GameInvariantTest.sol --ignore-compile --print echidna --json -
warn Failed to run slither
â€£ exit status 1
â‡¾ Running with a timeout of 30 seconds
â‡¾ Initializing corpus
â‡¾ Setting up test chain
â‡¾ Finished setting up test chain
â‡¾ Running call sequences in the corpus
â‡¾ Finished running call sequences in the corpus in 0s
â‡¾ corpus: health: 100%, sequences: 29 (29 valid, 0 invalid)
â‡¾ Fuzzing with 4 workers
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.players(uint256)
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.targetInterfaces()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.FEE_INCREASE_PERCENTAGE()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_cannotDeclareWinnerBeforeGracePeriod()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_gracePeriodPositive()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.owner()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.targetContracts()
â‡¾ fuzz: elapsed: 0s, calls: 0 (0/sec), seq/s: 0, branches hit: 515, corpus: 25, failures: 0/0, gas/s: 0
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.INITIAL_CLAIM_FEE()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_claimFeeIncreasesAfterClaim()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_claimFeeIncreasesWithClaims()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_gameLogicConsistency()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_totalClaimsConsistent()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_gameProgression()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_gameStateConsistency()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.GRACE_PERIOD()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.excludeContracts()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.failed()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_multiplePlayerParticipation()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_platformFeesNeverNegative()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.resetGame()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_gameRoundPositive()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.declareWinner()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.excludeSenders()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.game()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_cannotResetActiveGame()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_contractBalanceConsistency()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_gameEndedEventDataConsistency()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_kingCanChangeOverTime()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_kingCannotClaimAgain()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_previousKingPayoutImplemented()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_winnerGetsCorrectPayout()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.setUp()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.targetArtifactSelectors()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.targetArtifacts()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.withdrawPlatformFees()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.withdrawWinnings(uint256)
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.PLATFORM_FEE_PERCENTAGE()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.excludeArtifacts()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_remainingTimeCalculation()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_timeCalculationOverflowProtection()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.targetSelectors()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.targetSenders()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.IS_TEST()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.claimThrone(uint256,uint256)
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.excludeSelectors()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_claimFeeNeverBelowInitial()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_claimFeeOverflowProtection()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_claimFeeResetAfterGameReset()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_noEtherLeakage()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_noReentrancyLock()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_contractOwnershipIntegrity()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_onlyOwnerCanWithdrawPlatformFees()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_percentagesValid()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_potNeverNegative()
â‡¾ [NOT STARTED] Assertion Test: GameInvariantTest.invariant_withdrawPatternSafety()
â‡¾ fuzz: elapsed: 3s, calls: 29402 (9799/sec), seq/s: 203, branches hit: 834, corpus: 46, failures: 0/612, gas/s: 1761506483
â‡¾ Transaction test limit reached, halting now...
â‡¾ Fuzzer stopped, test results follow below ...
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.FEE_INCREASE_PERCENTAGE()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.GRACE_PERIOD()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.INITIAL_CLAIM_FEE()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.IS_TEST()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.PLATFORM_FEE_PERCENTAGE()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.claimThrone(uint256,uint256)[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.declareWinner()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.excludeArtifacts()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.excludeContracts()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.excludeSelectors()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.excludeSenders()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.failed()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.game()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_cannotDeclareWinnerBeforeGracePeriod()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_cannotResetActiveGame()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_claimFeeIncreasesAfterClaim()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_claimFeeIncreasesWithClaims()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_claimFeeNeverBelowInitial()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_claimFeeOverflowProtection()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_claimFeeResetAfterGameReset()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_contractBalanceConsistency()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_contractOwnershipIntegrity()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_gameEndedEventDataConsistency()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_gameLogicConsistency()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_gameProgression()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_gameRoundPositive()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_gameStateConsistency()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_gracePeriodPositive()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_kingCanChangeOverTime()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_kingCannotClaimAgain()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_multiplePlayerParticipation()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_noEtherLeakage()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_noReentrancyLock()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_onlyOwnerCanWithdrawPlatformFees()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_percentagesValid()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_platformFeesNeverNegative()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_potNeverNegative()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_previousKingPayoutImplemented()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_remainingTimeCalculation()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_timeCalculationOverflowProtection()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_totalClaimsConsistent()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_winnerGetsCorrectPayout()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.invariant_withdrawPatternSafety()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.owner()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.players(uint256)[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.resetGame()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.setUp()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.targetArtifactSelectors()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.targetArtifacts()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.targetContracts()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.targetInterfaces()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.targetSelectors()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.targetSenders()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.withdrawPlatformFees()[0m
â‡¾ [1m[32m[PASSED] [0m[0m[1mAssertion Test: GameInvariantTest.withdrawWinnings(uint256)[0m
â‡¾ Test summary: 55 test(s) passed, 0 test(s) failed
â‡¾ html report(s) saved to: medusa-corpus/coverage/coverage_report.html
â‡¾ lcov report(s) saved to: medusa-corpus/coverage/lcov.info
